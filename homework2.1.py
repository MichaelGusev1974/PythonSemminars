
# cсумма цифр натурального числа, функция:
# def sumDidgits(n):
#     summa = 0              # накапливаем сумму с нуля
#     while n != 0:          # пока n не равно 0
#         summa += n % 10    # добавляем в summa последнюю цифру числа
#         n = n//10          # удаляем последнюю цифру числа
#     return summa
#
# n = int(input('Введиде число n: '))
# summa = sumDidgits(n)
# print(f'{n}, -> {summa}')
# Напишите программу, которая принимает на вход вещественное число и показывает сумму его цифр.
# Пример:
# - 6782 -> 23
# - 0,56 -> 11
# cсумма цифр вещественного числа, функция: делал сам по аналогии примера, указанного выше
# def sumrealNumberDidgits(n):
#     summa = 0
#     n = n * 1000000
#     while n != 0:
#         summa += n % 10
#         n = n // 10
#     return int(summa)
# n = float(input('Введиде число n: '))
# summa = sumrealNumberDidgits(n)
# print(f'{n} -> {summa}')

n = float(input('Введиде число n: '))
sum_didgis = 0
power = len(str(n)) - 2      #  здесь определение степени, в какую степень будем возводить 10, чтоб отсечь цифры, после запятой
                             # необходимо тип float привести к str типу, чтоб получить число
n *= 10**power               # умножаем дробное число на 10**power, чтоб получить целое
while n:                     # цикл while работает только по истине, здесь не бесконечный цикл, а условие: в переменной
                             # n лежит что-то, отличное от нуля, 0 и False здесь эквивалентные значения.

    sum_didgis += n % 10     # кладем последнюю цифру числа (остаток от деления) в контейнер.
    n //= 10                 # шаг итерации - уменьшение n на одну цифру путем целочисленного деления на 10

print(sum_didgis)
# бесконечный цикл: while True:

print(len(str(123)))        # длина сстроки 3
print(len(str(1.23)))       # длина сстроки 4
print(1.23 * 10 ** 4)       # вывод: 12300.0 чтоб было 123 степень д.б. меньше на кол-во 0 до запятой т.е. 2
print(1.23 * 10 ** 2)       # вывод: 123.0






